generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 String              @id @default(uuid()) @db.Char(36)
  nome               String              @db.VarChar(100)
  email              String              @unique @db.VarChar(100)
  senha              String              @db.VarChar(60)
  avatar_url         String?             @db.VarChar(255)
  tipo_usuario_id    String              @db.Char(36)
  tipo_usuario       TipoUsuario         @relation(fields: [tipo_usuario_id], references: [id])
  created_at         DateTime            @default(now()) @map("created_at")
  updated_at         DateTime            @updatedAt @map("updated_at")
  campanha           Campanha[]
  endereco           Endereco[]
  forma_pagamento    FormaPagamento[]
  contribuicao       Contribuicao[]
  postagem           Postagem[]
  mensagem           Mensagem[]
  usuario_recompensa UsuarioRecompensa[]

  @@map("usuarios")
}

model TipoUsuario {
  id      String    @id @default(uuid()) @db.Char(36)
  rotulo  String    @db.Char(8)
  usuario Usuario[]

  @@map("tipos_usuarios")
}

model Endereco {
  id         String   @id @default(uuid()) @db.Char(36)
  numero     String   @db.VarChar(5)
  cep        String   @db.Char(8)
  cidade     String   @db.VarChar(100)
  uf         String   @db.Char(2)
  usuario_id String   @db.Char(36)
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  usuario    Usuario  @relation(fields: [usuario_id], references: [id])

  @@map("enderecos")
}

model Campanha {
  id           String         @id @default(uuid()) @db.Char(36)
  meta         Decimal        @db.Decimal(10, 2)
  prazo        DateTime       @db.DateTime()
  titulo       String         @db.VarChar(50)
  descricao    String         @db.VarChar(200)
  categoria    String         @db.VarChar(50)
  logo_url     String?        @db.VarChar(255)
  usuario_id   String         @db.Char(36)
  created_at   DateTime       @default(now()) @map("created_at")
  updated_at   DateTime       @updatedAt @map("updated_at")
  usuario      Usuario        @relation(fields: [usuario_id], references: [id])
  contribuicao Contribuicao[]
  recompensa   Recompensa[]
  postagem     Postagem[]
  mensagem     Mensagem[]

  @@map("campanhas")
}

model Contribuicao {
  id              String         @id @default(uuid()) @db.Char(36)
  valor           Decimal        @db.Decimal(10, 2)
  usuario_id      String         @db.Char(36)
  campanha_id     String         @db.Char(36)
  forma_id        String         @db.Char(36)
  created_at      DateTime       @default(now()) @map("created_at")
  updated_at      DateTime       @updatedAt @map("updated_at")
  usuario         Usuario        @relation(fields: [usuario_id], references: [id])
  campanha        Campanha       @relation(fields: [campanha_id], references: [id])
  forma_pagamento FormaPagamento @relation(fields: [forma_id], references: [id])

  @@map("contribuicoes")
}

model FormaPagamento {
  id           String         @id @default(uuid()) @db.Char(36)
  tipo         String         @db.VarChar(10)
  usuario_id   String         @db.Char(36)
  created_at   DateTime       @default(now()) @map("created_at")
  updated_at   DateTime       @updatedAt @map("updated_at")
  usuario      Usuario        @relation(fields: [usuario_id], references: [id])
  contribuicao Contribuicao[]

  @@map("formas_pagamento")
}

model Recompensa {
  id                 String              @id @default(uuid()) @db.Char(36)
  titulo             String              @db.VarChar(50)
  descricao          String              @db.VarChar(100)
  valor_minimo       Decimal             @db.Decimal(9, 2)
  imagem_url         String?             @db.VarChar(200)
  campanha_id        String              @db.Char(36)
  created_at         DateTime            @default(now()) @map("created_at")
  updated_at         DateTime            @updatedAt @map("updated_at")
  campanha           Campanha            @relation(fields: [campanha_id], references: [id])
  usuario_recompensa UsuarioRecompensa[]

  @@map("recompensas")
}

model UsuarioRecompensa {
  id            String     @id @default(uuid()) @db.Char(36)
  recompensa_id String     @db.Char(36)
  usuario_id    String     @db.Char(36)
  created_at    DateTime   @default(now()) @map("created_at")
  updated_at    DateTime   @updatedAt @map("updated_at")
  recompensa    Recompensa @relation(fields: [recompensa_id], references: [id])
  usuario       Usuario    @relation(fields: [usuario_id], references: [id])

  @@map("usuarios_recompensas")
}

model Postagem {
  id          String   @id @default(uuid()) @db.Char(36)
  titulo      String?  @db.VarChar(50)
  descricao   String?  @db.VarChar(200)
  usuario_id  String   @db.Char(36)
  campanha_id String   @db.Char(36)
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  usuario     Usuario  @relation(fields: [usuario_id], references: [id])
  campanha    Campanha @relation(fields: [campanha_id], references: [id])

  @@map("postagens")
}

model Mensagem {
  id          String   @id @default(uuid()) @db.Char(36)
  texto       String   @db.VarChar(200)
  usuario_id  String   @db.Char(36)
  campanha_id String   @db.Char(36)
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  usuario     Usuario  @relation(fields: [usuario_id], references: [id])
  campanha    Campanha @relation(fields: [campanha_id], references: [id])

  @@map("mensagens")
}
