generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                String              @id @default(uuid()) @db.Char(36)
  nome              String              @db.VarChar(100)
  email             String              @unique @db.VarChar(100)
  senha             String              @db.VarChar(60)
  avatarUrl         String?             @db.VarChar(255)
  tipoUsuarioId     String              @db.Char(36)
  createdAt         DateTime            @default(now()) @map("createdAt")
  updatedAt         DateTime            @updatedAt @map("updatedAt")
  campanha          Campanha[]
  contribuicao      Contribuicao[]
  endereco          Endereco[]
  formaPagamento    FormaPagamento[]
  mensagem          Mensagem[]
  postagem          Postagem[]
  tipoUsuario       TipoUsuario         @relation(fields: [tipoUsuarioId], references: [id])
  usuarioRecompensa UsuarioRecompensa[]

  @@index([tipoUsuarioId], map: "usuariosTipoUsuarioId_fkey")
  @@map("usuarios")
}

model TipoUsuario {
  id      String    @id @default(uuid()) @db.Char(36)
  rotulo  String    @db.Char(8)
  usuario Usuario[]

  @@map("tiposUsuarios")
}

model Endereco {
  id        String   @id @default(uuid()) @db.Char(36)
  numero    String   @db.VarChar(5)
  cep       String   @db.Char(8)
  cidade    String   @db.VarChar(100)
  uf        String   @db.Char(2)
  usuarioId String   @db.Char(36)
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId], map: "enderecosUsuarioId_fkey")
  @@map("enderecos")
}

model Campanha {
  id           String         @id @default(uuid()) @db.Char(36)
  meta         Decimal        @db.Decimal(10, 2)
  prazo        DateTime       @db.DateTime(0)
  titulo       String         @db.VarChar(50)
  descricao    String         @db.VarChar(200)
  previa       String         @db.VarChar(50)
  categoria    String         @db.VarChar(50)
  logoUrl      String?        @db.VarChar(255)
  usuarioId    String         @db.Char(36)
  createdAt    DateTime       @default(now()) @map("createdAt")
  updatedAt    DateTime       @updatedAt @map("updatedAt")
  usuario      Usuario        @relation(fields: [usuarioId], references: [id])
  contribuicao Contribuicao[]
  mensagem     Mensagem[]
  postagem     Postagem[]
  recompensa   Recompensa[]

  @@index([usuarioId], map: "campanhasUsuarioId_fkey")
  @@map("campanhas")
}

model Contribuicao {
  id               String         @id @default(uuid()) @db.Char(36)
  valor            Decimal        @db.Decimal(10, 2)
  usuarioId        String         @db.Char(36)
  campanhaId       String         @db.Char(36)
  formaPagamentoId String         @db.Char(36)
  createdAt        DateTime       @default(now()) @map("createdAt")
  updatedAt        DateTime       @updatedAt @map("updatedAt")
  campanha         Campanha       @relation(fields: [campanhaId], references: [id])
  formaPagamento   FormaPagamento @relation(fields: [formaPagamentoId], references: [id])
  usuario          Usuario        @relation(fields: [usuarioId], references: [id])

  @@index([campanhaId], map: "contribuicoesCampanhaId_fkey")
  @@index([formaPagamentoId], map: "contribuicoesFormaPagamentoId_fkey")
  @@index([usuarioId], map: "contribuicoesUsuarioId_fkey")
  @@map("contribuicoes")
}

model FormaPagamento {
  id           String         @id @default(uuid()) @db.Char(36)
  tipo         String         @db.VarChar(10)
  usuarioId    String         @db.Char(36)
  createdAt    DateTime       @default(now()) @map("createdAt")
  updatedAt    DateTime       @updatedAt @map("updatedAt")
  contribuicao Contribuicao[]
  usuario      Usuario        @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId], map: "formasPagamentoUsuarioId_fkey")
  @@map("formasPagamento")
}

model Recompensa {
  id                String              @id @default(uuid()) @db.Char(36)
  titulo            String              @db.VarChar(50)
  descricao         String              @db.VarChar(100)
  valorMinimo       Decimal             @db.Decimal(9, 2)
  imagemUrl         String?             @db.VarChar(200)
  campanhaId        String              @db.Char(36)
  createdAt         DateTime            @default(now()) @map("createdAt")
  updatedAt         DateTime            @updatedAt @map("updatedAt")
  campanha          Campanha            @relation(fields: [campanhaId], references: [id])
  usuarioRecompensa UsuarioRecompensa[]

  @@index([campanhaId], map: "recompensasCampanhaId_fkey")
  @@map("recompensas")
}

model UsuarioRecompensa {
  id           String     @id @default(uuid()) @db.Char(36)
  recompensaId String     @db.Char(36)
  usuarioId    String     @db.Char(36)
  createdAt    DateTime   @default(now()) @map("createdAt")
  updatedAt    DateTime   @updatedAt @map("updatedAt")
  recompensa   Recompensa @relation(fields: [recompensaId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@index([recompensaId], map: "usuariosRecompensasRecompensaId_fkey")
  @@index([usuarioId], map: "usuariosRecompensasUsuarioId_fkey")
  @@map("usuariosRecompensas")
}

model Postagem {
  id         String   @id @default(uuid()) @db.Char(36)
  titulo     String?  @db.VarChar(50)
  descricao  String?  @db.VarChar(200)
  usuarioId  String   @db.Char(36)
  campanhaId String   @db.Char(36)
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")
  campanha   Campanha @relation(fields: [campanhaId], references: [id])
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([campanhaId], map: "postagensCampanhaId_fkey")
  @@index([usuarioId], map: "postagensUsuarioId_fkey")
  @@map("postagens")
}

model Mensagem {
  id         String   @id @default(uuid()) @db.Char(36)
  texto      String   @db.VarChar(200)
  usuarioId  String   @db.Char(36)
  campanhaId String   @db.Char(36)
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")
  campanha   Campanha @relation(fields: [campanhaId], references: [id])
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([campanhaId], map: "mensagensCampanhaId_fkey")
  @@index([usuarioId], map: "mensagensUsuarioId_fkey")
  @@map("mensagens")
}
